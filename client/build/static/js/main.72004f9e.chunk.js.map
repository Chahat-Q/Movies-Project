{"version":3,"sources":["constants/actionTypes.js","api/index.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","actions/posts.js","components/Posts/styles.js","components/Posts/Posts.js","components/Form/styles.js","components/Form/Form.js","styles.js","images/movieimage.jpg","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["CREATE","UPDATE","DELETE","FETCH_ALL","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","overlay","top","left","color","overlay2","right","grid","details","margin","title","padding","cardActions","Post","post","setCurrentId","classes","useStyles","dispatch","useDispatch","Card","className","CardMedia","image","selectedFile","Typography","variant","creator","moment","createdAt","fromNow","Button","style","size","onClick","_id","fontSize","tags","map","tag","gutterBottom","CardContent","component","description","CardActions","a","console","log","api","data","type","payload","likeCount","message","theme","mainContainer","alignItems","smMargin","spacing","actionDiv","textAlign","Posts","posts","useSelector","state","length","Grid","container","item","xs","sm","CircularProgress","root","paper","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","useState","postData","setPostData","find","p","useEffect","clear","Paper","autoComplete","noValidate","onSubmit","e","preventDefault","newPost","createPost","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","appBar","heading","marginLeft","breakpoints","down","App","get","Container","maxwidth","AppBar","align","src","movieimage","alt","Grow","in","justify","combineReducers","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72004f9e.chunk.js","sourcesContent":["export const CREATE='CREATE';\r\nexport const UPDATE='UPDATE';\r\nexport const DELETE='DELETE';\r\nexport const FETCH_ALL='FETCH_ALL';","import axios from 'axios';\r\n\r\nconst url = 'https://my-favorite-movie.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url); //fetching posts that we get in the backend\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\nexport const updatePost = (id , updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport { Card , CardActions , CardContent, CardMedia, Button, Typography } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { deletePost , likePost } from '../../../actions/posts';\r\n\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    \r\n    return(\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">\r\n                    {post.creator}\r\n                </Typography>\r\n                <Typography variant=\"body2\">\r\n                    {moment(post.createdAt).fromNow()}\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button \r\n                    style={{color : 'white'}} \r\n                    size=\"small\" \r\n                    onClick={()=> setCurrentId(post._id)} >\r\n                    <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant='body2' color=\"textSecondary\">{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant='h5' gutterBottom>{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant='body2' color='textSecondary' component='p'>{post.description}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions}>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\r\n                    <ThumbUpAltIcon fontSize=\"small\" /> &nbsp;\r\n                    Like &nbsp;\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Post;","import { FETCH_ALL, DELETE, UPDATE, CREATE } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n\r\n//action creators are functions that return actions\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch({ type : FETCH_ALL , payload : data});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n\r\n        dispatch({ type : CREATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async(dispatch) => {\r\n    try {\r\n        const {data} = await api.updatePost(id, post);\r\n        dispatch({type: UPDATE, payload: data});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async(dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n        dispatch({type: DELETE, payload: id});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async(dispatch) =>{\r\n    try {\r\n        console.log(id)\r\n        const { data } = await api.likePost(id);\r\n        dispatch({ type:UPDATE , payload:data });\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Grid , CircularProgress} from '@material-ui/core';\r\n\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts =({setCurrentId})=>{\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n\r\n    console.log(posts)\r\n    \r\n    return(\r\n        !posts.length ? <CircularProgress /> : (\r\n            <Grid className={classes.container} container alignItems=\"stretch\" spacing=\"3\">\r\n                {\r\n                    posts.map((post) => (\r\n                        <Grid key={post._id} item xs={12} sm={6}>\r\n                            <Post post={post} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        )\r\n    );\r\n}\r\n\r\nexport default Posts;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState , useEffect} from 'react';\r\nimport useStyles from './styles';\r\nimport FileBase from 'react-file-base64';\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Form =({currentId , setCurrentId})=>{\r\n    const [postData , setPostData] = useState({creator: '', title: '', description :'', tags: '', selectedFile:''});\r\n    const post = useSelector((state) => currentId ? state.posts.find((p) => p._id === currentId) : null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if(post) setPostData(post)\r\n    } , [post])\r\n\r\n    const handleSubmit= (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(currentId){\r\n            console.log(postData)\r\n            dispatch(updatePost(currentId, postData));\r\n        }else{\r\n            dispatch(createPost(postData));\r\n        }\r\n        clear();\r\n    }\r\n\r\n\r\n    const clear= () => {\r\n        setCurrentId(null);\r\n        setPostData({creator: '', title: '', description :'', tags: '', selectedFile:''})\r\n    }\r\n    return(\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{ currentId ? \"Edit\" : \"Share\"} your Favorite Movie</Typography>\r\n                <TextField name=\"creator\" variant=\"outlined\" label=\"Your Name\" fullWidth value={postData.creator} onChange={(e) => setPostData({...postData, creator: e.target.value })}/>\r\n                <TextField name=\"title\" variant=\"outlined\" label=\"Title\" fullWidth value={postData.title} onChange={(e) => setPostData({...postData, title: e.target.value })}/>\r\n                <TextField name=\"description\" variant=\"outlined\" label=\"Description\" fullWidth value={postData.description} onChange={(e) => setPostData({...postData, description: e.target.value })}/>\r\n                <TextField name=\"tags\" variant=\"outlined\" label=\"Tags\" fullWidth value={postData.tags} onChange={(e) => setPostData({...postData, tags: e.target.value.split(',') })}/>\r\n                <div className={classes.fileInput}><FileBase type = \"file\" multiple={false} onDone={({base64}) => setPostData({ ...postData, selectedFile: base64})}/></div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    );\r\n}\r\n\r\nexport default Form;","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 50,\r\n    margin: '30px 0',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  heading: {\r\n    color: 'rgba(190,48,79,1)',\r\n  },\r\n  image: {\r\n    marginLeft: '15px',\r\n    borderRadius: 10\r\n  },\r\n  [theme.breakpoints.down('sm')]:{\r\n    mainContainer: {\r\n    flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n}));","export default __webpack_public_path__ + \"static/media/movieimage.ba0e0a65.jpg\";","import React, { useState, useEffect } from 'react';\r\nimport { Container , AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux'; //to dispatch a action\r\n\r\nimport { getPosts } from './actions/posts';\r\nimport Posts from './components/Posts/Posts';\r\nimport Form from './components/Form/Form';\r\nimport useStyles from './styles';\r\nimport movieimage from './images/movieimage.jpg';\r\n\r\nconst App= ()=>{\r\n    const [currentId, setCurrentId] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch(); //this is a hook in redux\r\n\r\n    useEffect(()=>{\r\n        dispatch(getPosts());\r\n    },[currentId,dispatch]);\r\n\r\n    return(\r\n        <Container maxwidth=\"lg\">\r\n            <AppBar className={classes.appBar} position=\"static\" color =\"inherit\">\r\n                <Typography className={classes.heading} variant=\"h2\" align=\"center\">Movies</Typography>\r\n                <img className={classes.image} src={movieimage} alt=\"movies\" height=\"50\" />\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid container className={classes.mainContainer} justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App;","import { combineReducers } from \"redux\";\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({ posts });","import { FETCH_ALL, DELETE, UPDATE, CREATE } from '../constants/actionTypes';\r\n\r\nexport default (posts =[] , action) => {\r\n    switch (action.type) {\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload);\r\n        case UPDATE:\r\n            return posts.map((post) => post._id === action.payload._id ? action.payload : post);\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload];\r\n        default:\r\n            return posts;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM  from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport reducers from './reducers';\r\n\r\nconst  store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}